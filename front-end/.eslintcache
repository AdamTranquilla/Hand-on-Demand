[{"/home/adam/lighthouse/helperr/front-end/src/index.js":"1","/home/adam/lighthouse/helperr/front-end/src/components/App.js":"2","/home/adam/lighthouse/helperr/front-end/src/components/helpers/__mocks__/axios.js":"3","/home/adam/lighthouse/helperr/front-end/src/components/Navbar/Navbar.jsx":"4","/home/adam/lighthouse/helperr/front-end/src/components/Chat/Chat.jsx":"5","/home/adam/lighthouse/helperr/front-end/src/components/helpers/hooks/useAppData.jsx":"6","/home/adam/lighthouse/helperr/front-end/src/components/Map/index.jsx":"7","/home/adam/lighthouse/helperr/front-end/src/components/Jobs/index.jsx":"8","/home/adam/lighthouse/helperr/front-end/src/components/helpers/hooks/useVisualMode.js":"9","/home/adam/lighthouse/helperr/front-end/src/components/JobToggle/JobToggle.jsx":"10","/home/adam/lighthouse/helperr/front-end/src/components/Jobs/Status.jsx":"11","/home/adam/lighthouse/helperr/front-end/src/components/Jobs/Error.jsx":"12","/home/adam/lighthouse/helperr/front-end/src/mapStyles.js":"13","/home/adam/lighthouse/helperr/front-end/src/components/Jobs/Find.jsx":"14","/home/adam/lighthouse/helperr/front-end/src/components/Jobs/All.jsx":"15","/home/adam/lighthouse/helperr/front-end/src/components/Map/Markers.jsx":"16","/home/adam/lighthouse/helperr/front-end/src/components/Map/Search.jsx":"17","/home/adam/lighthouse/helperr/front-end/src/components/Map/Locate.jsx":"18","/home/adam/lighthouse/helperr/front-end/src/components/Jobs/Post.jsx":"19","/home/adam/lighthouse/helperr/front-end/src/components/JobList/JobListItem.jsx":"20"},{"size":320,"mtime":1613412954643,"results":"21","hashOfConfig":"22"},{"size":1843,"mtime":1613412954643,"results":"23","hashOfConfig":"22"},{"size":4524,"mtime":1613412954643,"results":"24","hashOfConfig":"22"},{"size":6479,"mtime":1613412954643,"results":"25","hashOfConfig":"22"},{"size":1536,"mtime":1613412954643,"results":"26","hashOfConfig":"22"},{"size":1087,"mtime":1613412954643,"results":"27","hashOfConfig":"22"},{"size":1954,"mtime":1613412954643,"results":"28","hashOfConfig":"22"},{"size":1767,"mtime":1613412954643,"results":"29","hashOfConfig":"22"},{"size":476,"mtime":1613412954643,"results":"30","hashOfConfig":"22"},{"size":1199,"mtime":1613412954643,"results":"31","hashOfConfig":"22"},{"size":344,"mtime":1613412954643,"results":"32","hashOfConfig":"22"},{"size":518,"mtime":1613412954643,"results":"33","hashOfConfig":"22"},{"size":1922,"mtime":1613412954643,"results":"34","hashOfConfig":"22"},{"size":1664,"mtime":1613412954643,"results":"35","hashOfConfig":"22"},{"size":131,"mtime":1613412954643,"results":"36","hashOfConfig":"22"},{"size":952,"mtime":1613412954643,"results":"37","hashOfConfig":"22"},{"size":5833,"mtime":1613412954643,"results":"38","hashOfConfig":"22"},{"size":468,"mtime":1613412954643,"results":"39","hashOfConfig":"22"},{"size":8447,"mtime":1613412954643,"results":"40","hashOfConfig":"22"},{"size":391,"mtime":1613412954643,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"pmt3t7",{"filePath":"44","messages":"45","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/adam/lighthouse/helperr/front-end/src/index.js",[],"/home/adam/lighthouse/helperr/front-end/src/components/App.js",["89","90","91","92"],"import { useEffect, useRef, useState } from \"react\";\nimport Navbar from \"./Navbar/Navbar\";\nimport Map from \"./Map\";\nimport { Input } from \"@material-ui/core\";\nimport { io } from \"socket.io-client\";\nimport Jobs from \"./Jobs\";\nimport Chat from \"./Chat/Chat\";\nimport fixtures from \"./helpers/__mocks__/axios\";\nimport useAppData from \"./helpers/hooks/useAppData\";\nconst _socket = io.connect(\"http://localhost:8080\", {\n  transports: [\"websocket\"],\n});\n\nconst useChatSocket = () => {\n  const [messages, setMessages] = useState([]);\n  const socketRef = useRef(_socket);\n  const socket = socketRef.current;\n\n  const sendMessage = ({ name, message }) => {\n    return socket.emit(\"message\", { name, message });\n  };\n\n  useEffect(() => {\n    socket.removeAllListeners();\n    socket.on(\"message\", (message) => {\n      setMessages([...messages, message]);\n    });\n  });\n  return { messages, sendMessage };\n};\n\nexport default function App() {\n  const { messages, sendMessage } = useChatSocket();\n\n  // fixtures has: users, jobs, categories, offers, messages, reviews\n  // const { users, jobs, categories, offers, messages, reviews } = fixtures;\n  const { state, setJobView, setPostCode } = useAppData();\n\n  // const [state, setState] = useState({\n  //   users,\n  //   jobs,\n  //   categories,\n  //   offers,\n  //   messages,\n  //   reviews,\n  //   jobView: \"ALL\"\n  // });\n\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <div className=\"containers\">\n        <div className=\"map-container\">\n          <Map />\n        </div>\n\n        <div className=\"jobs-container\">\n          <Jobs\n            state={state}\n            setJobView={setJobView}\n            messages={messages}\n            sendMessage={sendMessage}\n          />\n          {/* <Chat messages={messages} sendMessage={sendMessage} /> */}\n        </div>\n      </div>\n    </div>\n  );\n}\n","/home/adam/lighthouse/helperr/front-end/src/components/helpers/__mocks__/axios.js",[],"/home/adam/lighthouse/helperr/front-end/src/components/Navbar/Navbar.jsx",["93","94","95","96"],"import React, { useState } from \"react\";\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport Badge from \"@material-ui/core/Badge\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    display: \"none\",\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"block\",\n    },\n  },\n  search: {\n    position: \"relative\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    \"&:hover\": {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing(3),\n      width: \"auto\",\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  inputRoot: {\n    color: \"inherit\",\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"md\")]: {\n      width: \"20ch\",\n    },\n  },\n  sectionDesktop: {\n    display: \"none\",\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"flex\",\n    },\n  },\n  sectionMobile: {\n    display: \"flex\",\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"none\",\n    },\n  },\n}));\n\nexport default function PrimarySearchAppBar() {\n  const [text, setText] = useState(\"\");\n\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  const handleProfileMenuOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  };\n\n  const handleMobileMenuOpen = (event) => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n\n  const menuId = \"primary-search-account-menu\";\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n    </Menu>\n  );\n\n  const mobileMenuId = \"primary-search-account-menu-mobile\";\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      <MenuItem>\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n          <Badge badgeContent={4} color=\"secondary\">\n            <MailIcon />\n          </Badge>\n        </IconButton>\n        <p>Messages</p>\n      </MenuItem>\n      <MenuItem>\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\n          <Badge badgeContent={11} color=\"secondary\">\n            <NotificationsIcon />\n          </Badge>\n        </IconButton>\n        <p>Notifications</p>\n      </MenuItem>\n      <MenuItem onClick={handleProfileMenuOpen}>\n        <IconButton\n          aria-label=\"account of current user\"\n          aria-controls=\"primary-search-account-menu\"\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n        >\n          <AccountCircle />\n        </IconButton>\n        <p>Profile</p>\n      </MenuItem>\n    </Menu>\n  );\n\n  return (\n    <div className={classes.grow}>\n      <AppBar\n        position=\"static\"\n        style={{ background: \"#a0c5e7\", color: \"#02539b\" }}\n      >\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            Helperr\n          </Typography>\n          <div className={classes.grow} />\n          <div className={classes.sectionDesktop}>\n            <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n              <Badge badgeContent={4} color=\"secondary\">\n                <MailIcon />\n              </Badge>\n            </IconButton>\n            <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\n              <Badge badgeContent={17} color=\"secondary\">\n                <NotificationsIcon />\n              </Badge>\n            </IconButton>\n            <IconButton\n              edge=\"end\"\n              aria-label=\"account of current user\"\n              aria-controls={menuId}\n              aria-haspopup=\"true\"\n              onClick={handleProfileMenuOpen}\n              color=\"inherit\"\n            >\n              <AccountCircle />\n            </IconButton>\n          </div>\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label=\"show more\"\n              aria-controls={mobileMenuId}\n              aria-haspopup=\"true\"\n              onClick={handleMobileMenuOpen}\n              color=\"inherit\"\n            >\n              <MoreIcon />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      {renderMobileMenu}\n      {renderMenu}\n    </div>\n  );\n}\n","/home/adam/lighthouse/helperr/front-end/src/components/Chat/Chat.jsx",["97","98"],"import React, { useState, useEffect } from \"react\";\nimport { io } from \"socket.io-client\";\nimport TextField from \"@material-ui/core/TextField\";\nimport \"./Chat.css\";\n\nconst Chat = ({ messages, sendMessage }) => {\n  const [state, setState] = useState({ message: \"\", name: \"\" });\n\n  const onTextChange = (e) => {\n    setState({ ...state, [e.target.name]: e.target.value });\n  };\n\n  const onMessageSubmit = (e) => {\n    e.preventDefault();\n    const { name, message } = state;\n    sendMessage({ name, message });\n    setState({ message: \"\", name });\n  };\n\n  const renderChat = () => {\n    return messages.map(({ name, message }, index) => (\n      <div key={index}>\n        <h3>\n          {name}: <span>{message}</span>\n        </h3>\n      </div>\n    ));\n  };\n\n  return (\n    <div className=\"card\">\n      <form onSubmit={onMessageSubmit}>\n        <h1>Messenger</h1>\n        <div className=\"name-field\">\n          <TextField\n            name=\"name\"\n            onChange={(e) => onTextChange(e)}\n            value={state.name}\n            label=\"Name\"\n          />\n        </div>\n        <div>\n          <TextField\n            name=\"message\"\n            onChange={(e) => onTextChange(e)}\n            value={state.message}\n            id=\"outlined-multiline-static\"\n            variant=\"outlined\"\n            label=\"Message\"\n          />\n        </div>\n        <button>Send Message</button>\n      </form>\n      <div className=\"render-chat\">\n        <h1>Chat Log</h1>\n        {renderChat()}\n      </div>\n    </div>\n  );\n};\n\nexport default Chat;\n","/home/adam/lighthouse/helperr/front-end/src/components/helpers/hooks/useAppData.jsx",[],"/home/adam/lighthouse/helperr/front-end/src/components/Map/index.jsx",[],"/home/adam/lighthouse/helperr/front-end/src/components/Jobs/index.jsx",["99","100","101","102","103","104","105","106","107","108"],"import Post from \"./Post\";\nimport Find from \"./Find\";\nimport All from \"./All\";\nimport Error from \"./Error\";\nimport Status from \"./Status\";\nimport useVisualMode from \"../helpers/hooks/useVisualMode\";\nimport JobToggle from \"../JobToggle/JobToggle\";\nimport { useState } from \"react\";\nimport \"./Jobs.css\";\nimport Chat from \"../Chat/Chat\";\n\nconst POST = \"POST\";\nconst FIND = \"FIND\";\nconst ALL = \"ALL\";\nconst SAVING = \"SAVING\";\nconst ERROR_SAVE = \"ERROR_SAVE\";\nconst ERROR_DELETE = \"ERROR_DELETE\";\n\nexport default function Jobs(props) {\n  // const [jobView, setJobView] = useState(ALL)\n  // const { mode, transition, back } = useVisualMode(ALL);\n\n  // function save(job) {\n  //   const newJob = {\n  //     // id: 1,\n  //     // client_id: 1,\n  //     // helper_id: 2,\n  //     // category_id: 3,\n  //     name: \"Babysit a lil' brat\",\n  //     description: \"Take care of this POS for me thanks\",\n  //     // lat: 49.28129,\n  //     // lng: 123.115121,\n  //     price: 1000,\n  //     per_hr: \"FALSE\",\n  //     // start_time: \"2021-02-26 18:00:00\",\n  //     // end_time: \"2021-02-27 00:00:00\",\n  //     // status: \"POSTED\",\n  //   };\n  //   // transition(SAVING);\n  //   props\n  //     .savePin(props.id)\n  //     .then(() => setJobView(ALL))\n  //     // .catch((error) => transition(ERROR_SAVE, true));\n  // }\n\n  return (\n    <>\n      <JobToggle state={props.state} setJobView={props.setJobView} />\n      {props.state.jobView === \"POST\" && <Post state={props.state} />}\n      {props.state.jobView === \"FIND\" && <Find />}\n      {props.state.jobView === \"ALL\" && <All />}\n      {props.state.jobView === \"MESSAGE\" && (\n        <Chat messages={props.messages} sendMessage={props.sendMessage} />\n      )}\n    </>\n  );\n}\n\n/* \nusers,\njobs,\ncategories,\noffers,\nmessages,\nreviews,\n*/\n","/home/adam/lighthouse/helperr/front-end/src/components/helpers/hooks/useVisualMode.js",[],"/home/adam/lighthouse/helperr/front-end/src/components/JobToggle/JobToggle.jsx",[],"/home/adam/lighthouse/helperr/front-end/src/components/Jobs/Status.jsx",[],"/home/adam/lighthouse/helperr/front-end/src/components/Jobs/Error.jsx",["109"],"import React from \"react\";\nimport \"./Jobs.css\";\n\n/* export default function Error(props) {\n  return (\n    <main className=\"appointment__card appointment__card--error\">\n      <section className=\"appointment__error-message\">\n        <h1 className=\"text--semi-bold\">Error</h1>\n        <h3 className=\"text--light\">{props.message}</h3>\n      </section>\n      <img\n        className=\"appointment__error-close\"\n        src=\"images/close.png\"\n        alt=\"Close\"\n        onClick={props.onClose}\n      />\n    </main>\n  );\n} */\n","/home/adam/lighthouse/helperr/front-end/src/mapStyles.js",["110"],"export default [\n  {\n      \"featureType\": \"landscape.man_made\",\n      \"elementType\": \"geometry.fill\",\n      \"stylers\": [\n          {\n              \"color\": \"#e9e9e9\"\n          }\n      ]\n  },\n  {\n      \"featureType\": \"landscape.man_made\",\n      \"elementType\": \"geometry.stroke\",\n      \"stylers\": [\n          {\n              \"color\": \"#000000\"\n          }\n      ]\n  },\n  {\n      \"featureType\": \"landscape.natural.terrain\",\n      \"elementType\": \"geometry.fill\",\n      \"stylers\": [\n          {\n              \"visibility\": \"simplified\"\n          }\n      ]\n  },\n  {\n      \"featureType\": \"road.highway.controlled_access\",\n      \"elementType\": \"geometry.fill\",\n      \"stylers\": [\n          {\n              \"color\": \"#ffb663\"\n          }\n      ]\n  },\n  {\n      \"featureType\": \"road.highway.controlled_access\",\n      \"elementType\": \"geometry.stroke\",\n      \"stylers\": [\n          {\n              \"color\": \"#dd7000\"\n          }\n      ]\n  },\n  {\n      \"featureType\": \"road.arterial\",\n      \"elementType\": \"geometry.fill\",\n      \"stylers\": [\n          {\n              \"color\": \"#ffc880\"\n          }\n      ]\n  },\n  {\n      \"featureType\": \"road.arterial\",\n      \"elementType\": \"geometry.stroke\",\n      \"stylers\": [\n          {\n              \"color\": \"#ea7700\"\n          }\n      ]\n  },\n  {\n      \"featureType\": \"road.local\",\n      \"elementType\": \"geometry.fill\",\n      \"stylers\": [\n          {\n              \"color\": \"#f5d1a2\"\n          }\n      ]\n  },\n  {\n      \"featureType\": \"water\",\n      \"elementType\": \"geometry.fill\",\n      \"stylers\": [\n          {\n              \"color\": \"#a0c5e7\"\n          }\n      ]\n  },\n  {\n      \"featureType\": \"water\",\n      \"elementType\": \"geometry.stroke\",\n      \"stylers\": [\n          {\n              \"hue\": \"#ff006a\"\n          }\n      ]\n  },\n  {\n      \"featureType\": \"water\",\n      \"elementType\": \"labels.text.fill\",\n      \"stylers\": [\n          {\n              \"color\": \"#02539b\"\n          }\n      ]\n  }\n]","/home/adam/lighthouse/helperr/front-end/src/components/Jobs/Find.jsx",["111","112","113"],"import \"./Jobs.css\";\n\n/* eslint-disable no-use-before-define */\nimport { useState } from \"react\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport JobListItem from \"../JobList/JobListItem\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: 500,\n    \"& > * + *\": {\n      marginTop: theme.spacing(3),\n    },\n  },\n}));\n\nexport default function Find() {\n  const classes = useStyles();\n  const [selectedCategories, setSelectedCategories] = useState(\"\");\n\n  return (\n    <>\n      <div className={classes.root}>\n        <Autocomplete\n          onChange={(event, value) => console.log(value)}\n          style={{ width: 450, margin: 8 }}\n          multiple\n          id=\"filter-categories\"\n          options={categories}\n          getOptionLabel={(option) => option.name}\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              variant=\"standard\"\n              label=\"Category\"\n              placeholder=\"Job Type\"\n            />\n          )}\n        />\n      </div>\n      <JobListItem />\n      <JobListItem />\n    </>\n  );\n}\n\nconst categories = [\n  {\n    id: 1,\n    name: \"Light-labour\",\n  },\n  {\n    id: 2,\n    name: \"Cleaning\",\n  },\n  {\n    id: 3,\n    name: \"Caregiving\",\n  },\n  {\n    id: 4,\n    name: \"AutoRepair\",\n  },\n  {\n    id: 5,\n    name: \"MinorRepair\",\n  },\n  {\n    id: 6,\n    name: \"Photography\",\n  },\n  {\n    id: 7,\n    name: \"Lessons\",\n  },\n  {\n    id: 8,\n    name: \"Delivery\",\n  },\n  {\n    id: 9,\n    name: \"Miscellaneous\",\n  },\n];\n","/home/adam/lighthouse/helperr/front-end/src/components/Jobs/All.jsx",[],"/home/adam/lighthouse/helperr/front-end/src/components/Map/Markers.jsx",[],"/home/adam/lighthouse/helperr/front-end/src/components/Map/Search.jsx",[],"/home/adam/lighthouse/helperr/front-end/src/components/Map/Locate.jsx",[],"/home/adam/lighthouse/helperr/front-end/src/components/Jobs/Post.jsx",[],"/home/adam/lighthouse/helperr/front-end/src/components/JobList/JobListItem.jsx",[],{"ruleId":"114","severity":1,"message":"115","line":4,"column":10,"nodeType":"116","messageId":"117","endLine":4,"endColumn":15},{"ruleId":"114","severity":1,"message":"118","line":7,"column":8,"nodeType":"116","messageId":"117","endLine":7,"endColumn":12},{"ruleId":"114","severity":1,"message":"119","line":8,"column":8,"nodeType":"116","messageId":"117","endLine":8,"endColumn":16},{"ruleId":"114","severity":1,"message":"120","line":37,"column":30,"nodeType":"116","messageId":"117","endLine":37,"endColumn":41},{"ruleId":"114","severity":1,"message":"121","line":7,"column":8,"nodeType":"116","messageId":"117","endLine":7,"endColumn":17},{"ruleId":"114","severity":1,"message":"122","line":12,"column":8,"nodeType":"116","messageId":"117","endLine":12,"endColumn":18},{"ruleId":"114","severity":1,"message":"123","line":83,"column":10,"nodeType":"116","messageId":"117","endLine":83,"endColumn":14},{"ruleId":"114","severity":1,"message":"124","line":83,"column":16,"nodeType":"116","messageId":"117","endLine":83,"endColumn":23},{"ruleId":"114","severity":1,"message":"125","line":1,"column":27,"nodeType":"116","messageId":"117","endLine":1,"endColumn":36},{"ruleId":"114","severity":1,"message":"126","line":2,"column":10,"nodeType":"116","messageId":"117","endLine":2,"endColumn":12},{"ruleId":"114","severity":1,"message":"127","line":4,"column":8,"nodeType":"116","messageId":"117","endLine":4,"endColumn":13},{"ruleId":"114","severity":1,"message":"128","line":5,"column":8,"nodeType":"116","messageId":"117","endLine":5,"endColumn":14},{"ruleId":"114","severity":1,"message":"129","line":6,"column":8,"nodeType":"116","messageId":"117","endLine":6,"endColumn":21},{"ruleId":"114","severity":1,"message":"130","line":8,"column":10,"nodeType":"116","messageId":"117","endLine":8,"endColumn":18},{"ruleId":"114","severity":1,"message":"131","line":12,"column":7,"nodeType":"116","messageId":"117","endLine":12,"endColumn":11},{"ruleId":"114","severity":1,"message":"132","line":13,"column":7,"nodeType":"116","messageId":"117","endLine":13,"endColumn":11},{"ruleId":"114","severity":1,"message":"133","line":14,"column":7,"nodeType":"116","messageId":"117","endLine":14,"endColumn":10},{"ruleId":"114","severity":1,"message":"134","line":15,"column":7,"nodeType":"116","messageId":"117","endLine":15,"endColumn":13},{"ruleId":"114","severity":1,"message":"135","line":16,"column":7,"nodeType":"116","messageId":"117","endLine":16,"endColumn":17},{"ruleId":"114","severity":1,"message":"136","line":17,"column":7,"nodeType":"116","messageId":"117","endLine":17,"endColumn":19},{"ruleId":"114","severity":1,"message":"137","line":1,"column":8,"nodeType":"116","messageId":"117","endLine":1,"endColumn":13},{"ruleId":"138","severity":1,"message":"139","line":1,"column":1,"nodeType":"140","endLine":101,"endColumn":2},{"ruleId":"114","severity":1,"message":"141","line":5,"column":8,"nodeType":"116","messageId":"117","endLine":5,"endColumn":12},{"ruleId":"114","severity":1,"message":"142","line":22,"column":10,"nodeType":"116","messageId":"117","endLine":22,"endColumn":28},{"ruleId":"114","severity":1,"message":"143","line":22,"column":30,"nodeType":"116","messageId":"117","endLine":22,"endColumn":51},"no-unused-vars","'Input' is defined but never used.","Identifier","unusedVar","'Chat' is defined but never used.","'fixtures' is defined but never used.","'setPostCode' is assigned a value but never used.","'InputBase' is defined but never used.","'SearchIcon' is defined but never used.","'text' is assigned a value but never used.","'setText' is assigned a value but never used.","'useEffect' is defined but never used.","'io' is defined but never used.","'Error' is defined but never used.","'Status' is defined but never used.","'useVisualMode' is defined but never used.","'useState' is defined but never used.","'POST' is assigned a value but never used.","'FIND' is assigned a value but never used.","'ALL' is assigned a value but never used.","'SAVING' is assigned a value but never used.","'ERROR_SAVE' is assigned a value but never used.","'ERROR_DELETE' is assigned a value but never used.","'React' is defined but never used.","import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","'Chip' is defined but never used.","'selectedCategories' is assigned a value but never used.","'setSelectedCategories' is assigned a value but never used."]