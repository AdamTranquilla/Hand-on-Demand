[{"/home/adam/lighthouse/helperr/front-end/src/index.js":"1","/home/adam/lighthouse/helperr/front-end/src/components/App.js":"2","/home/adam/lighthouse/helperr/front-end/src/mapStyles.js":"3","/home/adam/lighthouse/helperr/front-end/src/components/Map/index.jsx":"4","/home/adam/lighthouse/helperr/front-end/src/components/Map/Search.jsx":"5","/home/adam/lighthouse/helperr/front-end/src/components/Map/Locate.jsx":"6","/home/adam/lighthouse/helperr/front-end/src/components/Map/Markers.jsx":"7","/home/adam/lighthouse/helperr/front-end/src/components/Jobs/index.jsx":"8","/home/adam/lighthouse/helperr/front-end/src/components/Jobs/Post.jsx":"9","/home/adam/lighthouse/helperr/front-end/src/components/Jobs/All.jsx":"10","/home/adam/lighthouse/helperr/front-end/src/components/Jobs/Find.jsx":"11","/home/adam/lighthouse/helperr/front-end/src/components/helpers/hooks/useVisualMode.js":"12","/home/adam/lighthouse/helperr/front-end/src/components/JobToggle/JobToggle.jsx":"13","/home/adam/lighthouse/helperr/front-end/src/components/helpers/__mocks__/axios.js":"14","/home/adam/lighthouse/helperr/front-end/src/components/Jobs/Error.jsx":"15","/home/adam/lighthouse/helperr/front-end/src/components/Jobs/Status.jsx":"16","/home/adam/lighthouse/helperr/front-end/src/components/helpers/hooks/useAppData.jsx":"17","/home/adam/lighthouse/helperr/front-end/src/components/Navbar/Navbar.jsx":"18"},{"size":277,"mtime":1613248285615,"results":"19","hashOfConfig":"20"},{"size":970,"mtime":1613280877569,"results":"21","hashOfConfig":"20"},{"size":1922,"mtime":1613260470604,"results":"22","hashOfConfig":"20"},{"size":1954,"mtime":1613280915513,"results":"23","hashOfConfig":"20"},{"size":5833,"mtime":1613280943877,"results":"24","hashOfConfig":"20"},{"size":468,"mtime":1613280934637,"results":"25","hashOfConfig":"20"},{"size":952,"mtime":1613280874857,"results":"26","hashOfConfig":"20"},{"size":1600,"mtime":1613277544405,"results":"27","hashOfConfig":"20"},{"size":7359,"mtime":1613280854449,"results":"28","hashOfConfig":"20"},{"size":131,"mtime":1613277544401,"results":"29","hashOfConfig":"20"},{"size":209,"mtime":1613277544401,"results":"30","hashOfConfig":"20"},{"size":476,"mtime":1613252475516,"results":"31","hashOfConfig":"20"},{"size":813,"mtime":1613277544401,"results":"32","hashOfConfig":"20"},{"size":4524,"mtime":1613277544405,"results":"33","hashOfConfig":"20"},{"size":518,"mtime":1613277544401,"results":"34","hashOfConfig":"20"},{"size":344,"mtime":1613277544401,"results":"35","hashOfConfig":"20"},{"size":990,"mtime":1613323574115,"results":"36","hashOfConfig":"20"},{"size":6479,"mtime":1613258669928,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"pmt3t7",{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"40"},"/home/adam/lighthouse/helperr/front-end/src/index.js",[],["81","82"],"/home/adam/lighthouse/helperr/front-end/src/components/App.js",["83","84","85"],"import Navbar from \"./Navbar/Navbar\";\nimport Map from \"./Map\";\nimport { Input } from \"@material-ui/core\";\nimport Jobs from \"./Jobs\";\nimport { useState } from \"react\";\n\nimport fixtures from \"./helpers/__mocks__/axios\";\nimport useAppData from \"./helpers/hooks/useAppData\";\n\n// fixtures has: users, jobs, categories, offers, messages, reviews\n\nexport default function App() {\n  // const { users, jobs, categories, offers, messages, reviews } = fixtures;\n  const {state, setJobView } = useAppData()\n\n  // const [state, setState] = useState({\n  //   users,\n  //   jobs,\n  //   categories,\n  //   offers,\n  //   messages,\n  //   reviews,\n  //   jobView: \"ALL\"\n  // });\n\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <div className=\"containers\">\n        <div className=\"map-container\">\n          <Map />\n        </div>\n\n        <div className=\"jobs-container\">\n          <Jobs state={state} setJobView={setJobView}/>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/home/adam/lighthouse/helperr/front-end/src/mapStyles.js",["86"],"export default [\n  {\n      \"featureType\": \"landscape.man_made\",\n      \"elementType\": \"geometry.fill\",\n      \"stylers\": [\n          {\n              \"color\": \"#e9e9e9\"\n          }\n      ]\n  },\n  {\n      \"featureType\": \"landscape.man_made\",\n      \"elementType\": \"geometry.stroke\",\n      \"stylers\": [\n          {\n              \"color\": \"#000000\"\n          }\n      ]\n  },\n  {\n      \"featureType\": \"landscape.natural.terrain\",\n      \"elementType\": \"geometry.fill\",\n      \"stylers\": [\n          {\n              \"visibility\": \"simplified\"\n          }\n      ]\n  },\n  {\n      \"featureType\": \"road.highway.controlled_access\",\n      \"elementType\": \"geometry.fill\",\n      \"stylers\": [\n          {\n              \"color\": \"#ffb663\"\n          }\n      ]\n  },\n  {\n      \"featureType\": \"road.highway.controlled_access\",\n      \"elementType\": \"geometry.stroke\",\n      \"stylers\": [\n          {\n              \"color\": \"#dd7000\"\n          }\n      ]\n  },\n  {\n      \"featureType\": \"road.arterial\",\n      \"elementType\": \"geometry.fill\",\n      \"stylers\": [\n          {\n              \"color\": \"#ffc880\"\n          }\n      ]\n  },\n  {\n      \"featureType\": \"road.arterial\",\n      \"elementType\": \"geometry.stroke\",\n      \"stylers\": [\n          {\n              \"color\": \"#ea7700\"\n          }\n      ]\n  },\n  {\n      \"featureType\": \"road.local\",\n      \"elementType\": \"geometry.fill\",\n      \"stylers\": [\n          {\n              \"color\": \"#f5d1a2\"\n          }\n      ]\n  },\n  {\n      \"featureType\": \"water\",\n      \"elementType\": \"geometry.fill\",\n      \"stylers\": [\n          {\n              \"color\": \"#a0c5e7\"\n          }\n      ]\n  },\n  {\n      \"featureType\": \"water\",\n      \"elementType\": \"geometry.stroke\",\n      \"stylers\": [\n          {\n              \"hue\": \"#ff006a\"\n          }\n      ]\n  },\n  {\n      \"featureType\": \"water\",\n      \"elementType\": \"labels.text.fill\",\n      \"stylers\": [\n          {\n              \"color\": \"#02539b\"\n          }\n      ]\n  }\n]","/home/adam/lighthouse/helperr/front-end/src/components/Map/index.jsx",[],"/home/adam/lighthouse/helperr/front-end/src/components/Map/Search.jsx",[],"/home/adam/lighthouse/helperr/front-end/src/components/Map/Locate.jsx",[],"/home/adam/lighthouse/helperr/front-end/src/components/Map/Markers.jsx",[],"/home/adam/lighthouse/helperr/front-end/src/components/Jobs/index.jsx",["87","88","89","90","91","92","93","94","95","96"],"import Post from \"./Post\";\nimport Find from \"./Find\";\nimport All from \"./All\";\nimport Error from \"./Error\";\nimport Status from \"./Status\";\nimport useVisualMode from \"../helpers/hooks/useVisualMode\";\nimport JobToggle from \"../JobToggle/JobToggle\"\nimport { useState } from \"react\";\nimport \"./Jobs.css\";\n\n\nconst POST = \"POST\";\nconst FIND = \"FIND\";\nconst ALL = \"ALL\";\nconst SAVING = \"SAVING\"\nconst ERROR_SAVE = \"ERROR_SAVE\";\nconst ERROR_DELETE = \"ERROR_DELETE\";\n\n\nexport default function Jobs(props) {\n  // const [jobView, setJobView] = useState(ALL)\n  // const { mode, transition, back } = useVisualMode(ALL);\n\n\n  // function save(job) {\n  //   const newJob = {\n  //     // id: 1,\n  //     // client_id: 1,\n  //     // helper_id: 2,\n  //     // category_id: 3,\n  //     name: \"Babysit a lil' brat\",\n  //     description: \"Take care of this POS for me thanks\",\n  //     // lat: 49.28129,\n  //     // lng: 123.115121,\n  //     price: 1000,\n  //     per_hr: \"FALSE\",\n  //     // start_time: \"2021-02-26 18:00:00\",\n  //     // end_time: \"2021-02-27 00:00:00\",\n  //     // status: \"POSTED\",\n  //   };\n  //   // transition(SAVING);\n  //   props\n  //     .savePin(props.id) \n  //     .then(() => setJobView(ALL))\n  //     // .catch((error) => transition(ERROR_SAVE, true));\n  // }\n\n  return (\n    <>\n    <JobToggle state={props.state} setJobView={props.setJobView}/>\n      {props.state.jobView === \"POST\" && <Post state={props.state}/>}\n      {props.state.jobView === \"FIND\" && <Find/>}\n      {props.state.jobView === \"ALL\" && <All />}\n    </>\n  );\n}\n\n/* \nusers,\njobs,\ncategories,\noffers,\nmessages,\nreviews,\n*/","/home/adam/lighthouse/helperr/front-end/src/components/Jobs/Post.jsx",["97","98","99","100","101","102"],"import { useState, setState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport Input from \"@material-ui/core/Input\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport clsx from \"clsx\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport \"./Jobs.css\";\nimport \"date-fns\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from \"@material-ui/pickers\";\n\nconst categories = [\n  {\n    id: 1,\n    name: \"Light-labour\",\n  },\n  {\n    id: 2,\n    name: \"Cleaning\",\n  },\n  {\n    id: 3,\n    name: \"Caregiving\",\n  },\n  {\n    id: 4,\n    name: \"AutoRepair\",\n  },\n  {\n    id: 5,\n    name: \"MinorRepair\",\n  },\n  {\n    id: 6,\n    name: \"Photography\",\n  },\n  {\n    id: 7,\n    name: \"Lessons\",\n  },\n  {\n    id: 8,\n    name: \"Delivery\",\n  },\n  {\n    id: 9,\n    name: \"Miscellaneous\",\n  },\n];\n/* \nfunction onPin() {\n  if (name === \"\" && interviewer === null) {\n    setError(\"Student name and Instructor selection cannot be blank\");\n    return;\n  } else if (name === \"\") {\n    setError(\"Student name cannot be blank\");\n    return;\n  } else if (interviewer === null) {\n    setError(\"Instructor selection cannot be blank\");\n    return;\n  }\n  setError(\"\");\n  props.onSave(name, interviewer);\n} */\nfunction onSubmit() {\n\n}\nexport default function Post(props) {\n  const classes = useStyles();\n  const [hourly, setHourly] = useState();\n  const handleChange = (event) => {\n    setHourly(event.target.value);\n  };\n  const [selectedStartDate, setSelectedStartDate] = useState(\n    new Date(\"2021-02-18T21:11:54\")\n  );\n  const [selectedEndDate, setSelectedEndDate] = useState(\n    new Date(\"2021-02-18T21:11:54\")\n  );\n\n  const handleStartDateChange = (date) => {\n    setSelectedStartDate(date);\n  };\n\n  const handleEndDateChange = (date) => {\n    setSelectedEndDate(date);\n  };\n  // `https://maps.googleapis.com/maps/api/geocode/json?address=${post_code},+CA&key=${process.env.REACT_APP_GOOGLE_API_KEY}`\n  return (\n    <>\n      <span>Post Help Request</span>\n      <form action=\"\">\n        <TextField\n          id=\"standard-textarea\"\n          style={{ width: 450, margin: 8 }}\n          label=\"Job\"\n          placeholder=\"What do you need help with?\"\n          fullWidth\n        />\n        <TextField\n          id=\"standard-textarea\"\n          // value={props.state.per_hr}\n          style={{ width: 450, margin: 8 }}\n          label=\"Description\"\n          placeholder=\"Details of your job\"\n          fullWidth\n          multiline\n          rowsMax=\"10\"\n        />\n        <Autocomplete\n          id=\"combo-box-demo\"\n          value={props.state.category}\n          options={categories}\n          getOptionLabel={(option) => option.name}\n          style={{ width: 450, margin: 8 }}\n          renderInput={(params) => <TextField {...params} label=\"Category\" />}\n        />\n          <TextField\n          id=\"standard-textarea\"\n          // value={props.state.per_hr}\n          style={{ width: 450, margin: 8 }}\n          label=\"Location\"\n          placeholder=\"Enter Postal Code\"\n          fullWidth\n        />\n        <TextField\n          label=\"Price\"\n          id=\"standard-start-adornment\"\n          value={props.state.price}\n          style={{ width: 315, margin: 8 }}\n          InputProps={{\n            startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\n          }}\n        />\n        <FormControl className={classes.formControl}>\n          <InputLabel id=\"demo-simple-select-label\">Pay Type</InputLabel>\n          <Select\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            value={props.state.per_hr}\n            onChange={handleChange}\n          >\n            <MenuItem value={\"hourly\"}>Hourly</MenuItem>\n            <MenuItem value={\"perJob\"}>Per Job</MenuItem>\n          </Select>\n        </FormControl>\n        <br />\n        <form className={classes.container} noValidate>\n          <TextField\n            id=\"datetime-local\"\n            style={{ width: 145 }}\n            label=\"Start Date\"\n            // type=\"datetime-local\"\n            type=\"date\"\n            defaultValue=\"--\"\n            className={classes.textField}\n            InputLabelProps={{\n              shrink: true,\n            }}\n          />\n          <TextField\n            id=\"time\"\n            style={{ width: 55 }}\n            label=\"Time\"\n            type=\"time\"\n            defaultValue=\"--\"\n            className={classes.textField}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            inputProps={{\n              step: 300, // 5 min\n            }}\n          />\n          <TextField\n            id=\"datetime-local\"\n            style={{ width: 145 }}\n            label=\"End Date\"\n            // type=\"datetime-local\"\n            type=\"date\"\n            defaultValue=\"--\"\n            className={classes.textField}\n            InputLabelProps={{\n              shrink: true,\n            }}\n          />\n          <TextField\n            id=\"time\"\n            style={{ width: 55 }}\n            label=\"Time\"\n            type=\"time\"\n            defaultValue=\"--\"\n            className={classes.textField}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            inputProps={{\n              step: 300, // 5 min\n            }}\n          />\n        </form>\n\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n          <Grid container justify=\"space-around\">\n            <KeyboardDatePicker\n              disableToolbar\n              variant=\"inline\"\n              format=\"MM/dd/yyyy\"\n              margin=\"normal\"\n              id=\"date-picker-inline\"\n              label=\"Start Date\"\n              value={selectedStartDate}\n              onChange={handleStartDateChange}\n              KeyboardButtonProps={{\n                \"aria-label\": \"change date\",\n              }}\n            />\n            <KeyboardDatePicker\n              disableToolbar\n              variant=\"inline\"\n              format=\"MM/dd/yyyy\"\n              margin=\"normal\"\n              id=\"date-picker-inline\"\n              label=\"End Date\"\n              value={selectedEndDate}\n              onChange={handleEndDateChange}\n              KeyboardButtonProps={{\n                \"aria-label\": \"change date\",\n              }}\n            />\n          </Grid>\n        </MuiPickersUtilsProvider>\n\n        <br />\n        <Button\n          onClick={onSubmit}\n          variant=\"contained\"\n          color=\"primary\"\n          style={{ margin: 8 }}\n        >\n          HELP ME!!!\n        </Button>\n      </form>\n    </>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: \"25ch\",\n  },\n}));\n","/home/adam/lighthouse/helperr/front-end/src/components/Jobs/All.jsx",[],"/home/adam/lighthouse/helperr/front-end/src/components/Jobs/Find.jsx",[],"/home/adam/lighthouse/helperr/front-end/src/components/helpers/hooks/useVisualMode.js",[],"/home/adam/lighthouse/helperr/front-end/src/components/JobToggle/JobToggle.jsx",[],"/home/adam/lighthouse/helperr/front-end/src/components/helpers/__mocks__/axios.js",[],"/home/adam/lighthouse/helperr/front-end/src/components/Jobs/Error.jsx",["103"],"import React from \"react\";\nimport \"./Jobs.css\";\n\n/* export default function Error(props) {\n  return (\n    <main className=\"appointment__card appointment__card--error\">\n      <section className=\"appointment__error-message\">\n        <h1 className=\"text--semi-bold\">Error</h1>\n        <h3 className=\"text--light\">{props.message}</h3>\n      </section>\n      <img\n        className=\"appointment__error-close\"\n        src=\"images/close.png\"\n        alt=\"Close\"\n        onClick={props.onClose}\n      />\n    </main>\n  );\n} */\n","/home/adam/lighthouse/helperr/front-end/src/components/Jobs/Status.jsx",[],"/home/adam/lighthouse/helperr/front-end/src/components/helpers/hooks/useAppData.jsx",[],"/home/adam/lighthouse/helperr/front-end/src/components/Navbar/Navbar.jsx",["104","105","106","107"],"import React, { useState } from \"react\";\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport Badge from \"@material-ui/core/Badge\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    display: \"none\",\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"block\",\n    },\n  },\n  search: {\n    position: \"relative\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    \"&:hover\": {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing(3),\n      width: \"auto\",\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  inputRoot: {\n    color: \"inherit\",\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"md\")]: {\n      width: \"20ch\",\n    },\n  },\n  sectionDesktop: {\n    display: \"none\",\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"flex\",\n    },\n  },\n  sectionMobile: {\n    display: \"flex\",\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"none\",\n    },\n  },\n}));\n\nexport default function PrimarySearchAppBar() {\n  const [text, setText] = useState(\"\");\n\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  const handleProfileMenuOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  };\n\n  const handleMobileMenuOpen = (event) => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n\n  const menuId = \"primary-search-account-menu\";\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n    </Menu>\n  );\n\n  const mobileMenuId = \"primary-search-account-menu-mobile\";\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      <MenuItem>\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n          <Badge badgeContent={4} color=\"secondary\">\n            <MailIcon />\n          </Badge>\n        </IconButton>\n        <p>Messages</p>\n      </MenuItem>\n      <MenuItem>\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\n          <Badge badgeContent={11} color=\"secondary\">\n            <NotificationsIcon />\n          </Badge>\n        </IconButton>\n        <p>Notifications</p>\n      </MenuItem>\n      <MenuItem onClick={handleProfileMenuOpen}>\n        <IconButton\n          aria-label=\"account of current user\"\n          aria-controls=\"primary-search-account-menu\"\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n        >\n          <AccountCircle />\n        </IconButton>\n        <p>Profile</p>\n      </MenuItem>\n    </Menu>\n  );\n\n  return (\n    <div className={classes.grow}>\n      <AppBar\n        position=\"static\"\n        style={{ background: \"#a0c5e7\", color: \"#02539b\" }}\n      >\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            Helperr\n          </Typography>\n          <div className={classes.grow} />\n          <div className={classes.sectionDesktop}>\n            <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n              <Badge badgeContent={4} color=\"secondary\">\n                <MailIcon />\n              </Badge>\n            </IconButton>\n            <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\n              <Badge badgeContent={17} color=\"secondary\">\n                <NotificationsIcon />\n              </Badge>\n            </IconButton>\n            <IconButton\n              edge=\"end\"\n              aria-label=\"account of current user\"\n              aria-controls={menuId}\n              aria-haspopup=\"true\"\n              onClick={handleProfileMenuOpen}\n              color=\"inherit\"\n            >\n              <AccountCircle />\n            </IconButton>\n          </div>\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label=\"show more\"\n              aria-controls={mobileMenuId}\n              aria-haspopup=\"true\"\n              onClick={handleMobileMenuOpen}\n              color=\"inherit\"\n            >\n              <MoreIcon />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      {renderMobileMenu}\n      {renderMenu}\n    </div>\n  );\n}\n",{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":3,"column":10,"nodeType":"114","messageId":"115","endLine":3,"endColumn":15},{"ruleId":"112","severity":1,"message":"116","line":5,"column":10,"nodeType":"114","messageId":"115","endLine":5,"endColumn":18},{"ruleId":"112","severity":1,"message":"117","line":7,"column":8,"nodeType":"114","messageId":"115","endLine":7,"endColumn":16},{"ruleId":"118","severity":1,"message":"119","line":1,"column":1,"nodeType":"120","endLine":101,"endColumn":2},{"ruleId":"112","severity":1,"message":"121","line":4,"column":8,"nodeType":"114","messageId":"115","endLine":4,"endColumn":13},{"ruleId":"112","severity":1,"message":"122","line":5,"column":8,"nodeType":"114","messageId":"115","endLine":5,"endColumn":14},{"ruleId":"112","severity":1,"message":"123","line":6,"column":8,"nodeType":"114","messageId":"115","endLine":6,"endColumn":21},{"ruleId":"112","severity":1,"message":"116","line":8,"column":10,"nodeType":"114","messageId":"115","endLine":8,"endColumn":18},{"ruleId":"112","severity":1,"message":"124","line":12,"column":7,"nodeType":"114","messageId":"115","endLine":12,"endColumn":11},{"ruleId":"112","severity":1,"message":"125","line":13,"column":7,"nodeType":"114","messageId":"115","endLine":13,"endColumn":11},{"ruleId":"112","severity":1,"message":"126","line":14,"column":7,"nodeType":"114","messageId":"115","endLine":14,"endColumn":10},{"ruleId":"112","severity":1,"message":"127","line":15,"column":7,"nodeType":"114","messageId":"115","endLine":15,"endColumn":13},{"ruleId":"112","severity":1,"message":"128","line":16,"column":7,"nodeType":"114","messageId":"115","endLine":16,"endColumn":17},{"ruleId":"112","severity":1,"message":"129","line":17,"column":7,"nodeType":"114","messageId":"115","endLine":17,"endColumn":19},{"ruleId":"112","severity":1,"message":"130","line":1,"column":20,"nodeType":"114","messageId":"115","endLine":1,"endColumn":28},{"ruleId":"112","severity":1,"message":"131","line":5,"column":8,"nodeType":"114","messageId":"115","endLine":5,"endColumn":22},{"ruleId":"112","severity":1,"message":"113","line":8,"column":8,"nodeType":"114","messageId":"115","endLine":8,"endColumn":13},{"ruleId":"112","severity":1,"message":"132","line":10,"column":8,"nodeType":"114","messageId":"115","endLine":10,"endColumn":12},{"ruleId":"112","severity":1,"message":"133","line":21,"column":3,"nodeType":"114","messageId":"115","endLine":21,"endColumn":21},{"ruleId":"112","severity":1,"message":"134","line":83,"column":10,"nodeType":"114","messageId":"115","endLine":83,"endColumn":16},{"ruleId":"112","severity":1,"message":"135","line":1,"column":8,"nodeType":"114","messageId":"115","endLine":1,"endColumn":13},{"ruleId":"112","severity":1,"message":"136","line":7,"column":8,"nodeType":"114","messageId":"115","endLine":7,"endColumn":17},{"ruleId":"112","severity":1,"message":"137","line":12,"column":8,"nodeType":"114","messageId":"115","endLine":12,"endColumn":18},{"ruleId":"112","severity":1,"message":"138","line":83,"column":10,"nodeType":"114","messageId":"115","endLine":83,"endColumn":14},{"ruleId":"112","severity":1,"message":"139","line":83,"column":16,"nodeType":"114","messageId":"115","endLine":83,"endColumn":23},"no-native-reassign",["140"],"no-negated-in-lhs",["141"],"no-unused-vars","'Input' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'fixtures' is defined but never used.","import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","'Error' is defined but never used.","'Status' is defined but never used.","'useVisualMode' is defined but never used.","'POST' is assigned a value but never used.","'FIND' is assigned a value but never used.","'ALL' is assigned a value but never used.","'SAVING' is assigned a value but never used.","'ERROR_SAVE' is assigned a value but never used.","'ERROR_DELETE' is assigned a value but never used.","'setState' is defined but never used.","'FormHelperText' is defined but never used.","'clsx' is defined but never used.","'KeyboardTimePicker' is defined but never used.","'hourly' is assigned a value but never used.","'React' is defined but never used.","'InputBase' is defined but never used.","'SearchIcon' is defined but never used.","'text' is assigned a value but never used.","'setText' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]